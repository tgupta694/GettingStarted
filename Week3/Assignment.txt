Welcome to week 3 of Tech ready. Here are the assignments for this week. 
These problems continue to focus on array, sorting and searching and will help you learn those concepts.
 
	1. Search an element in a sorted and rotated array
	An element in a sorted array can be found in O(log n) time via binary search. 
	But suppose we rotate an ascending order sorted array at some pivot unknown to you beforehand. 
	So for instance, 1 2 3 4 5 might become 3 4 5 1 2. Devise a way to find an element in the rotated array in O(log n) time.
	 
	Below is an example to demonstrate
	Input  : arr[] = {5, 6, 7, 8, 9, 10, 1, 2, 3};
         key = 3
	Output : Found at index 8

	Input  : arr[] = {5, 6, 7, 8, 9, 10, 1, 2, 3};
         key = 30
	Output : Not found

	Input : arr[] = {30, 40, 50, 10, 20}
        key = 10   
	Output : Found at index 3
	 
	You must think of a solution to do it in O(log n) time complexity.
	 
	2. Given an array and a number k where k is smaller than size of array, we need to find the k’th smallest element in the given array.
	It is given that all array elements are distinct.
	 
	Input: arr[] = {7, 10, 4, 3, 20, 15}
       k = 3
	Output: 7

	Input: arr[] = {7, 10, 4, 3, 20, 15}
       k = 4
	Output: 10

 
Please submit your solutions in github, if any issues send those via email. And as always please send your questions if you have any.
